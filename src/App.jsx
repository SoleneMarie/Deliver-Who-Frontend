import axios from "axios";
import { useState } from "react";
import { useEffect } from "react";
import { FaStar } from "react-icons/fa";
import deliverooLogoComplet from "./pictures/SVG/logo-teal.svg";
import { CiCirclePlus } from "react-icons/ci";
import { CiCircleMinus } from "react-icons/ci";
{
  /*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  ---------------------------------------------States et variables globales----------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/
}
function App() {
  const [data, setData] = useState();
  const [isLoading, setisLoading] = useState(true);
  const [isPicked, setIsPicked] = useState([]);
  const [buy, setBuy] = useState(false);
  let total1 = 0;
  isPicked.map((item) => (total1 += item.price * item.number));

  {
    /*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  ---------------------------------------------R√©cup√©ration de la data --------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/
  }
  useEffect(() => {
    const getData = async () => {
      try {
        const response = await axios.get(
          "https://site--deliver-oo--dk2vmt6fnyjp.code.run/"
        );
        setData(response.data);
        setisLoading(false);
      } catch (error) {
        console.log(error.reponse);
      }
    };
    getData();
  }, []);
  {
    /*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  ---------------------------------------------Chargement de la page deliveroo----------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/
  }
  return (
    <>
      {isLoading ? (
        <span>üêõEn cours de chargement...üêõ</span>
      ) : (
        <>
          <header>
            <section className="line">
              <div className="band">
                <img
                  className="logo"
                  src={deliverooLogoComplet}
                  alt="logo deliveroo"
                />
              </div>
            </section>

            <section id="flexheader">
              <section className="mainHeader">
                <h1>{data.restaurant.name}</h1>
                <p>{data.restaurant.description}</p>
              </section>

              <img id="banner-pic" src={data.restaurant.picture} />
            </section>
          </header>
          {/*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  ---------------------------------------------Premier map : afficher les titres de cat√©gories----------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/}
          <main>
            <div className="mainblock">
              <section id="allcategories">
                {data.categories.map((elem, index) => {
                  if (elem.meals.length !== 0) {
                    return (
                      <>
                        <h2 key={index}> {elem.name}</h2>

                        <section className="oneCategory">
                          {/*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  ---------------------------------------------Second map: afficher les plats ----------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------/*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -------------------onClick : si l'id de mon √©l√©ment existe d√©j√†, je r√©cup√®re son index-----------------------------------
  -------------------puis je cr√©e un nouveau tableau,  +1 √† sa cl√© number, et je mets ce ---------------------------
  --------------------------------------nouveau tableau dans setIsPicked.------------------------------------------
  -----------------------------------------------------------------------------------------------------------------------------------------------*/}
                          {elem.meals.map((elemBis, index) => {
                            return (
                              <>
                                <section key={index} className="contentOnemeal">
                                  <section
                                    className="onemeal"
                                    onClick={(event) => {
                                      event.preventDefault;

                                      if (
                                        isPicked.find(
                                          (element) =>
                                            element.key === elemBis.id
                                        )
                                      ) {
                                        const arrCopy = [...isPicked];
                                        let indexfound = arrCopy.indexOf(
                                          isPicked.find(
                                            (element) =>
                                              element.key === elemBis.id
                                          )
                                        );
                                        arrCopy[indexfound].number += 1;
                                        setIsPicked(arrCopy);
                                        {
                                          /*------------------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  ------------------------------------------Sinon, je cr√©e une nouvelle case  ---------------------------------------
  -----------------------------------dans mon tableau isPicked, contenant un objet.----------------------------------
  ---------------------------------------une case = une ligne dans le panier-------------------------------------
  ---------------------------------------------------------------------------------------------------------------------*/
                                        }
                                      } else {
                                        const MealsArr = [...isPicked];
                                        MealsArr.push({
                                          key: elemBis.id,
                                          title: elemBis.title,
                                          price: elemBis.price,
                                          number: 1,
                                        });

                                        {
                                          /*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -----------------------------------... et je modifie la valeur de la cl√© price √† cet index-------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/
                                        }
                                        setIsPicked(MealsArr);
                                      }
                                    }}
                                  >
                                    {/*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  --------------------------Voici l'html qui va √™tre appel√© pour chaque .map du tableau ----------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/}
                                    <section className="AllText">
                                      <h3 key="elem.id">{elemBis.title}</h3>
                                      <div className="overflowHidden">
                                        <p>{elemBis.description}</p>
                                      </div>
                                      <div className="priceandpop">
                                        <span className="moyen">
                                          {elemBis.price} ‚Ç¨
                                        </span>
                                        {elemBis.popular && (
                                          <div className="pop">
                                            <div>
                                              <FaStar />
                                            </div>
                                            <div>
                                              <p className="petit">Populaire</p>
                                            </div>
                                          </div>
                                        )}
                                      </div>
                                    </section>
                                    {elemBis.picture && (
                                      <img
                                        src={elemBis.picture}
                                        alt={elemBis.title}
                                      />
                                    )}
                                  </section>
                                </section>
                                {/*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  --------------------------La section .onemeal est finie. ----------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/}
                              </>
                            );
                          })}
                        </section>
                      </>
                    );
                  }
                })}
              </section>

              {/*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  ------------------------------------------------------Mon panier-----------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/}
              <section className="Panier">
                <div className="boxshadow">
                  <div className="buttonclass">
                    {isPicked.length === 0 ? (
                      <button className="greybut">Valider mon panier</button>
                    ) : (
                      <button className="greenbut" onClick={() => setBuy(true)}>
                        Valider mon panier
                      </button>
                    )}
                  </div>
                  <div className="basket">
                    {/*----------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------
  ----------------------s'il y a au moins un √©l√©ment dans isPicked, on effectue cela  --------------------------------------
  ------------------------pour chaque case de isPicked--------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/}
                    <section className="alllines">
                      {isPicked.length !== 0 ? (
                        isPicked.map((item) => {
                          return (
                            <>
                              {/*-------------------------------------------------------------------------------------------------------
  -------------------------------------------------------------------------------------------------------------------------------------
  -------------------------------------OnClick, Je prends l'id de l'item.  ----------------------------------------------
  ----------------------------------Je cherche dans isPicked la case avec cet id, je r√©cup√®re l'index-----------------------------------
  ------------------------------Bouton moins :--Copie de isPicked, .number - 1, setIsPicked---------------------------------------------------------
  -------------------------------------------------------------------------------------------------------------------------------*/}

                              <section key={item.key} className="basket-line">
                                <div className="right">
                                  <button
                                    className="plusminus"
                                    onClick={() => {
                                      const indexPicked = isPicked.indexOf(
                                        isPicked.find(
                                          (element) => element.key === item.key
                                        )
                                      );

                                      const newArr = [...isPicked];
                                      newArr[indexPicked].number -= 1;
                                      setIsPicked(newArr);

                                      {
                                        /*--------------------------------------------------------------------------------------------------
  ---------------------------------------------------------------------------------------------------------------------------------
  ---------------------------------------si .number redescend √† 0, supprimer la case ------------------------------------------------
  -----------------------------------------dans isPicked (en passant par un tableau interm√©diaire------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/
                                      }

                                      const AnotherArr = [...isPicked];
                                      isPicked[indexPicked].number === 0 &&
                                        AnotherArr.splice(indexPicked, 1);
                                      setIsPicked(AnotherArr);
                                    }}
                                  >
                                    <div className="icon">
                                      <CiCircleMinus />
                                    </div>
                                  </button>
                                  <p>{item.number}</p>
                                  {/*--------------------------------------------------------------------------------------------------
  ---------------------------------------------------------------------------------------------------------------------------------
  ----------------------------------------------------bouton + ------------------------------------------------
  -------------------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/}
                                  <button
                                    className="plusminus"
                                    onClick={() => {
                                      const indexPicked = isPicked.indexOf(
                                        isPicked.find(
                                          (element) => element.key === item.key
                                        )
                                      );

                                      const newArr = [...isPicked];
                                      newArr[indexPicked].number += 1;
                                      setIsPicked(newArr);
                                    }}
                                  >
                                    <div className="icon">
                                      <CiCirclePlus />
                                    </div>
                                  </button>
                                  <p className="title">{item.title}</p>
                                </div>
                                <div className="left">
                                  <p>
                                    {(item.price * item.number).toFixed(2)} ‚Ç¨
                                  </p>
                                </div>
                              </section>
                            </>
                          );
                        })
                      ) : (
                        <span>
                          Votre panier est vide
                        </span> /* Si tableau vide, panier vide*/
                      )}
                    </section>
                    {/*--------------------------------------------------------------------------------------------------
  -------------------------------------------------------------------------------------------------------------------------------
  -------------------------Calcul du total (√† corriger). Si prix > 50‚Ç¨, frais de livraison offerts-------------------------------------
  -------------------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/}

                    {isPicked.length !== 0 && (
                      <>
                        <section className="calcul">
                          <div className="deliverfee">
                            <p>Sous-total</p>
                            <p>{total1.toFixed(2)} ‚Ç¨</p>
                          </div>
                          {total1 < 50 && (
                            <div className="deliverfee">
                              <p>Frais de livraison</p>
                              <p>{(2.5).toFixed(2) + " ‚Ç¨"}</p>
                            </div>
                          )}
                        </section>
                      </>
                    )}

                    {/*--------------------------------------------------------------------------------------------------
  -------------------------------------------------------------------------------------------------------------------------------
  -------------------------Derni√®re section : total-----------------------------------------------
  -------------------------------------------------------------------------------------------------------------------------
  -----------------------------------------------------------------------------------------------------------------*/}
                    {isPicked.length !== 0 && (
                      <section className="total">
                        <>
                          <div className="deliverfee">
                            <p>Total</p>

                            <p>{total1.toFixed(2) + " ‚Ç¨"}</p>
                          </div>
                        </>
                      </section>
                    )}
                  </div>
                </div>
              </section>
            </div>
          </main>
        </>
      )}
    </>
  );
}

export default App;
